(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{290:function(t,a,s){"use strict";s.r(a);var e=s(14),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"üêù-use-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#üêù-use-api"}},[t._v("#")]),t._v(" üêù Use API")]),t._v(" "),a("p",[t._v("Camomilla comes with many api endpoint builded with Django Rest Framework.")]),t._v(" "),a("p",[t._v("To use the endpoints you need to add the handler to the project urls.py")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <project_name>/urls.py")]),t._v("\nurlpatterns "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'api/camomilla/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" include"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'camomilla.urls'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("‚ö†Ô∏è Beware!")]),t._v(" "),a("p",[t._v("Remember that if you use camomilla pages "),a("code",[t._v("dynamic_pages_urls")]),t._v(" handler should always be the last handler of your urlpatterns list.")])]),t._v(" "),a("p",[t._v("By default every endpoint comes with a full CRUD in the style of django rest framework with some mode feature beaked in.")]),t._v(" "),a("h2",{attrs:{id:"üß±-base-classes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#üß±-base-classes"}},[t._v("#")]),t._v(" üß± Base Classes")]),t._v(" "),a("p",[t._v("If you need to implement your own api, we suggest to use camomilla "),a("code",[t._v("BaseModelSerializer")]),t._v(" and "),a("code",[t._v("BaseModelViewset")]),t._v(" as the base class of your serializer and viewset respectively.")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyModelSerializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BaseModelSerializer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        model "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" MyModel\n        fields "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__all__"')]),t._v("\n        depth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n")])])]),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyModelViewSet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BaseModelViewset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    queryset "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" MyModel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objects"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    serializer_class "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" MyModelSerializer\n    permission_classes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CamomillaBasePermissions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    model "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" MyModel\n    search_fields "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"title"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("This will provide to your endpoint all the features of standard camomilla api.")]),t._v(" "),a("h2",{attrs:{id:"üñ≤Ô∏è-the-model-api-register-decorator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#üñ≤Ô∏è-the-model-api-register-decorator"}},[t._v("#")]),t._v(" üñ≤Ô∏è The model_api.register decorator")]),t._v(" "),a("p",[t._v("If you need to create a standard api endpoint  you can take advantage of model_api register decorator.\nTo use this aproach you need to add the model_api handler to your project urls.py")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <project_name>/urls.py")]),t._v("\nurlpatterns "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'api/models/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" include"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'camomilla.model_api'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Then you just need to decorate your model with "),a("code",[t._v("@model_api.register")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" camomilla "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" model_api\n\n"),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@model_api"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyModel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Model"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    title "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CharField"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max_length"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    description "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" models"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TextField"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("null"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" blank"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("This will create an api endpoint with url  "),a("code",[t._v("/api/models/my-model")]),t._v(" with full camomilla api capabilities.")]),t._v(" "),a("p",[t._v("You can also personalize the view or the serializer passing some parameter to the register function:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("base_serializer")]),t._v(": The base serializer to use for the model.")]),t._v(" "),a("li",[a("code",[t._v("base_viewset")]),t._v(": The base viewset to use for the model.")]),t._v(" "),a("li",[a("code",[t._v("serializer_meta")]),t._v(": The meta class to use for the serializer.")]),t._v(" "),a("li",[a("code",[t._v("viewset_attrs")]),t._v(": The attributes to add to the viewset.")]),t._v(" "),a("li",[a("code",[t._v("filters")]),t._v(": The filters to apply to the queryset.")])]),t._v(" "),a("h2",{attrs:{id:"üóÇÔ∏è-list-endpoint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#üóÇÔ∏è-list-endpoint"}},[t._v("#")]),t._v(" üóÇÔ∏è List endpoint")]),t._v(" "),a("p",[a("strong",[t._v("URL Structure:")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("api/camomilla/<model_name>")])])]),t._v(" "),a("p",[a("strong",[t._v("Simple Response:")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ... single model data ... "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h3",{attrs:{id:"use-pagination"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-pagination"}},[t._v("#")]),t._v(" Use Pagination")]),t._v(" "),a("p",[t._v("List api comes with a builtin paginator.\nThe paginated response is disabled by defualt to be compliant with default rest framework lists.\nIf you want a paginated response you need to specify the page size in the request as a GET parameter.")]),t._v(" "),a("p",[t._v("For example, the request "),a("code",[t._v("/api/camomilla/<model_name>?items=10")]),t._v(", will return data splittet 10 elements per page.")]),t._v(" "),a("p",[a("strong",[t._v("Paginated Response:")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"items"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ... single model data ... "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"paginator"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"count"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// number of elements")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"page"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// current page number")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"has_next"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// has a next page")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"has_previous"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// has a previous page")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pages"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// total number of pages")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"page_size"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// number of elements per page (depends on items parameter)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"use-filtering"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-filtering"}},[t._v("#")]),t._v(" Use Filtering")]),t._v(" "),a("p",[t._v("List api comes with a builtin filter syntax.\nYou can filter data with GET query parameters using the following sintax:")]),t._v(" "),a("p",[a("code",[t._v("/api/camomilla/<model_name>?fltr=field_name=value")])]),t._v(" "),a("p",[t._v("This syntax can be repeated multiple times.")]),t._v(" "),a("p",[a("code",[t._v("/api/camomilla/<model_name>?fltr=field_name=value&fltr=field_name=value")])]),t._v(" "),a("p",[t._v("In place of "),a("code",[t._v("field_name")]),t._v(" you can use any "),a("a",{attrs:{href:"https://docs.djangoproject.com/en/4.2/topics/db/queries/#retrieving-specific-objects-with-filters",target:"_blank",rel:"noopener noreferrer"}},[t._v("django filter argument"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("If the value has commas like "),a("code",[t._v("val1,val2,val3")]),t._v(" it will be treated as an array.\nFor example you can filter some model like this:")]),t._v(" "),a("p",[a("code",[t._v("/api/camomilla/<model_name>?fltr=field_name__in=val1,val2")])]),t._v(" "),a("h3",{attrs:{id:"use-search"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-search"}},[t._v("#")]),t._v(" Use Search")]),t._v(" "),a("p",[t._v("You can also full text search your model with query param "),a("code",[t._v("search")]),t._v(":")]),t._v(" "),a("p",[a("code",[t._v("/api/camomilla/<model_name>?search=q_string")])]),t._v(" "),a("h2",{attrs:{id:"üóÇÔ∏è-detail-endpoint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#üóÇÔ∏è-detail-endpoint"}},[t._v("#")]),t._v(" üóÇÔ∏è Detail endpoint")]),t._v(" "),a("p",[t._v("Retrieve api just returns model data serialized in a json.\nThe serialization goes through nested objects by default, creating on the fly nested serializers.\nYou can modify this behaviour decreasing the value "),a("code",[t._v("depth")]),t._v(" in Serializer Meta for a single serializer or change the default option in camomilla settings.")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("CAMOMILLA "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MEDIA"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"API"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NESTING_DEPTH"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("URL Structure:")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("api/camomilla/<model_name>/<primary_key>")])])]),t._v(" "),a("p",[a("strong",[t._v("Simple Response:")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ... single model data ... "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);